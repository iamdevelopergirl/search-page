{"version":3,"sources":["Components/Header/headerPosition.js","assets/Wunderflats logo.svg","Components/Header/header.js","Components/Common/button.js","Components/Title/title.js","Components/PropertyListings/property.js","Components/PropertyListings/propertyListing.js","Components/Loading/loading.js","App.js","serviceWorker.js","index.js"],"names":["curScroll","doc","document","documentElement","w","window","prevScroll","scrollY","scrollTop","direction","prevDirection","toggleHeader","header","getElementById","classList","add","remove","addEventListener","Header","id","className","src","logo","alt","Button","props","type","onClick","name","Title","titleText","titleDescription","buttonName","dispatch","dispatchActionAfterGetList","getFontSize","title","style","d","createElement","fontSize","maxsize","innerText","body","appendChild","offsetWidth","h","offsetHeight","removeChild","x","y","r","Math","min","fsize","round","Property","image","price","PropertyListing","listingArray","propertyList","listings","map","property","en","Intl","NumberFormat","format","_id","Loading","searchPlace","PROPERTY_LIST_API","ACTION_TYPES","TITLE_CONTAINER_ERROR_STRINGS","TITLE_CONTAINER_SUCCESS_STRINGS","descrption","a","data","fetch","method","headers","response","status","json","console","log","fetchProperty","then","payload","initialState","isLoaded","error","reducer","state","action","Router","useReducer","useEffect","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.137415a5.chunk.js","sourcesContent":["(function(){\n\n    let doc = document.documentElement;\n    let w = window;\n  \n    let prevScroll = w.scrollY || doc.scrollTop;\n    let curScroll;\n    let direction = 0;\n    let prevDirection = 0;\n  \n    const checkScroll = () => {\n      curScroll = w.scrollY || doc.scrollTop;\n      if (curScroll > prevScroll) { \n        //scrolled up  \n        direction = 2;\n      }\n      else if (curScroll < prevScroll) { \n        //scrolled down\n        direction = 1;\n      }\n  \n      if (direction !== prevDirection) {\n        toggleHeader(direction, curScroll);\n      }\n  \n      prevScroll = curScroll;\n    };\n  \n    const toggleHeader = (direction, curScroll) => {\n      let header = document.getElementById('app-header');\n      if (direction === 2 && curScroll > 70) { \n        header.classList.add('hide');\n        prevDirection = direction;\n      }\n      else if (direction === 1) {\n        header.classList.remove('hide');\n        prevDirection = direction;\n      }\n    };\n  \n    window.addEventListener('scroll', checkScroll);\n})();","export default __webpack_public_path__ + \"static/media/Wunderflats logo.53b2670c.svg\";","import './header.css';\nimport logo from '../../assets/Wunderflats logo.svg';\nimport './headerPosition.js';\n\nfunction Header(){\n    return(    \n        <header id=\"app-header\" className=\"header-container\">\n            <div className=\"blog-title\">\n                <img src={logo} className=\"app-logo\" alt=\"logo\" />\n            </div>\n            <div className=\"circle\">\n                <p className=\"inner-text\">E</p>\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import './button.css';\n\nconst Button = (props) => {\n    return (\n        <button type=\"button\" id={props.id} className={`button-component ${props.className}`} onClick={props.onClick}>{props.name}</button>\n    )\n}\n\nexport default Button;","import React from 'react';\nimport { dispatchActionAfterGetList } from \"../../App.js\";\nimport './title.css';\nimport Button from '../Common/button.js';\n\n\nfunction Title({titleText, titleDescription, buttonName, dispatch}){\n    const _handleButtonClick = () => {\n        dispatchActionAfterGetList(dispatch);\n    }\n\n    return(    \n        <section className=\"title-container\">\n            <section className=\"title-section\">\n                <div className=\"title\">\n                    <p>{titleText}</p>\n                </div>\n                <div className=\"number-search\">\n                    <p className=\"inner-text\">{titleDescription}</p>\n                </div>\n                <div className=\"reload-button\">\n                    <Button name={buttonName} className=\"black\" onClick={_handleButtonClick}/>\n                </div>\n            </section>\n        </section>\n    )\n}\n\nexport default Title;","import './property.css';\n\nconst getFontSize = (title) => {\n    let maxw = 370, maxh = 30, maxsize = 18, style = {};\n    let d = document.createElement(\"span\");\n    d.style.fontSize = maxsize + \"px\";\n    d.innerText = title;\n    document.body.appendChild(d);\n    let w = d.offsetWidth;\n    let h = d.offsetHeight;\n    document.body.removeChild(d);\n    let x = w > maxw ? maxw / w : 1;\n    let y = h > maxh ? maxh / h : 1;\n    let r = Math.min(x, y) * maxsize;\n    let fsize = Math.round(r) + \"px\";\n    style.fontSize = fsize;\n    return style;\n}\n\nconst Property = ({title, image, price}) => (\n    <article className=\"property-article\">\n        <img src={image} alt={title} className=\"property-image\">\n        </img>\n        <div className=\"property-name\" style={getFontSize(title)}>\n            <p>\n                {title}\n            </p>\n        </div>\n        <div className=\"property-price\">\n            <p>\n                {price}\n                <span> {` per month`}</span>\n            </p>\n        </div>\n    </article>\n)\n\nexport default Property;","import './property.css';\nimport Property from './property.js';\n\nconst convertPriceToNumberFormat = (price) => {\n    return `â‚¬${Intl.NumberFormat().format(price)}`;\n}\n\nconst getListing = (listingArray) => {\n    if(listingArray === null){\n        return <div></div>\n    }\n    return listingArray.listings.map((property) => {\n        return <Property key={property._id} title={property.title.en} image={property[\"image\"]} price={convertPriceToNumberFormat(property[\"price\"])}/>\n    });\n}\n\nfunction PropertyListing({propertyList}){\n    return(    \n        <section className=\"listing-container\">\n            {getListing(propertyList)}\n        </section>\n    )\n}\n\nexport default PropertyListing;","const Loading = ({searchPlace}) => (\n    <div className=\"loading\">\n        {`Loading homes in ${searchPlace}...`}\n    </div>\n)\n\nexport default Loading;","import React, { useReducer, useEffect } from 'react';\nimport './App.css';\nimport Header from './Components/Header/header.js';\nimport Title from './Components/Title/title.js';\nimport PropertyListing from './Components/PropertyListings/propertyListing.js';\nimport Loading from './Components/Loading/loading.js';\nconst searchPlace = \"Berlin\";\nconst PROPERTY_LIST_API = \"https://wunderflats-frontend-challenge-api.glitch.me/listings\";\nconst ACTION_TYPES = {\n  ERROR_IN_FETCH : \"ERROR_IN_FETCH\",\n  SUCCESS_IN_FETCH : \"SUCCESS_IN_FETCH\",\n  START_FETCH : \"START_FETCH\",\n}\nconst TITLE_CONTAINER_ERROR_STRINGS = {\n    title : \"Something went wrong\",\n    descrption: \"Please retry by clicking the button below\",\n    buttonName: \"Try again\"\n}\n\nconst TITLE_CONTAINER_SUCCESS_STRINGS = {\n  title : `Homes in ${searchPlace}`,\n  descrption: \"More than 200 homes found\",\n  buttonName: \"Reload results\"\n}\n/**\n* @private\n* @function fetchProperty\n* @desc fetch function to get the property listing response\n*/\nasync function fetchProperty(){\n  let data = null;\n  try{\n    let response = await fetch(PROPERTY_LIST_API, \n                                { method: 'GET',\n                                  headers: { \n                                  'Content-Type': 'application/json',\n                                  'Accept': 'application/json'\n                                  } \n                                },\n                              );\n    if(response.status === 200){\n      data = await response.json();\n    }\n  }\n  catch(error){\n    console.log(`Error while fetching the list ${error}`);\n  }\n  finally{\n    return data;\n  }\n}\n\n/**\n* @public\n* @function dispatchActionAfterGetList\n* @desc utiltity function to dispatch action based on the fetch property result\n*/\nexport function dispatchActionAfterGetList(dispatch){\n  fetchProperty().then(data => {\n    let type = \"\";\n    let payload = null;\n    if(data  === null){\n      type = ACTION_TYPES.ERROR_IN_FETCH;\n    }\n    else{\n      type = ACTION_TYPES.SUCCESS_IN_FETCH;\n      payload = data;\n    }\n    dispatch({\n      type,\n      payload\n    })\n  });\n}\n\nconst initialState = {\n  isLoaded: false,\n  propertyList: null,\n  error: false,\n};\n\n/**\n* @public\n* @function reducer\n* @desc reducer function that takes care of changing the state based on action type\n*/\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.SUCCESS_IN_FETCH:\n      return {\n        ...state,\n        isLoaded: true,\n        propertyList: action.payload,\n        error: false,\n      };\n    case ACTION_TYPES.ERROR_IN_FETCH:\n      return {\n        ...state,\n        isLoaded: true,\n        propertyList: null,\n        error: true\n      };\n    default:\n      return state;\n  }\n};\n\n/**\n* @public\n* @function Router\n* @desc Router component that routes main page to either propery list or loading\n*/\nexport function Router() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    dispatchActionAfterGetList(dispatch);\n    return () => {\n    }\n  }, [])\n\n  return (\n    <div>\n      { state.isLoaded ? \n        <div className=\"main-container\">\n          <Title \n            titleText={state.error ? TITLE_CONTAINER_ERROR_STRINGS.title : TITLE_CONTAINER_SUCCESS_STRINGS.title} \n            titleDescription={state.error ? TITLE_CONTAINER_ERROR_STRINGS.descrption : TITLE_CONTAINER_SUCCESS_STRINGS.descrption} \n            buttonName={state.error ? TITLE_CONTAINER_ERROR_STRINGS.buttonName : TITLE_CONTAINER_SUCCESS_STRINGS.buttonName}\n            dispatch={dispatch}/>\n          <PropertyListing propertyList={state.propertyList}/>\n        </div> \n        :\n        <div className=\"main-container\">\n          <Loading searchPlace={searchPlace}/>\n        </div>\n      }\n    </div>\n  );\n}\n\n/**\n* @function App\n* @desc App component main component\n*/\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Router/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}